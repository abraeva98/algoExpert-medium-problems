function longestPalindromicSubstring(string) {
	if (string.length <= 1) return string;
	let longest = 0;
	let maxSub = '';
	let maxLength = 0;
	for (let i = 0; i < string.length; i ++) {
		for (let j = i + 1; j < string.length; j ++) {
				const potentialPalindrome = string.slice(i, j + 1);
			  const check = isPalindrome(potentialPalindrome);
			  if (check) {
					if (potentialPalindrome.length > maxLength) {
						maxLength = potentialPalindrome.length;
						maxSub = potentialPalindrome;
					}
				}
		}
	}
	return maxSub;
}

function isPalindrome(str) {
	let left = 0;
	let right = str.length - 1;
	while (left <= right) {
		if (str[left] !== str[right]) return false;
		left ++;
		right --;
	}
	return true;
}




__________________________

function longestPalindromicSubstring(string) {
  // Write your code here.
	if (string.length <= 1) return string;
	let largest = 0;
	let str = '';
	for (let i = 1; i < string.length; i ++) {
		let result;
		let result1 = doubleMirror(i, i - 1, string);
		let result2 = doubleMirror(i + 1, i - 1, string);
	  if (result1.length > result2.length) {
			result = result1
		} else {
			result = result2;
		}
		if (!result) continue;
		if (result.length > largest) {
			largest = result.length;
			str = result;
		}
	}
	return str;
}

function doubleMirror(right, left, str) {
	while (left >= 0 && right < str.length) {
		if (str[right] === str[left]) {
			right ++;
			left --;
		} else {
			break;
		}
	}
	left += 1;
	str = str.slice(left, right);
	return str;
}
