function longestPalindromicSubstring(string) {
	if (string.length <= 1) return string;
	let longest = 0;
	let maxSub = '';
	let maxLength = 0;
	for (let i = 0; i < string.length; i ++) {
		for (let j = i + 1; j < string.length; j ++) {
				const potentialPalindrome = string.slice(i, j + 1);
			  const check = isPalindrome(potentialPalindrome);
			  if (check) {
					if (potentialPalindrome.length > maxLength) {
						maxLength = potentialPalindrome.length;
						maxSub = potentialPalindrome;
					}
				}
		}
	}
	return maxSub;
}

function isPalindrome(str) {
	let left = 0;
	let right = str.length - 1;
	while (left <= right) {
		if (str[left] !== str[right]) return false;
		left ++;
		right --;
	}
	return true;
}
