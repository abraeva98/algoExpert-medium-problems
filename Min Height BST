
  Write a function that takes in a non-empty sorted array of distinct integers,
  constructs a BST from the integers, and returns the root of the BST.

function minHeightBst(array) {
	return helper(array, null, 0, array.length - 1)
}

function helper(array, tree, left, right) {
	if (right < left) return;
	let middle = Math.floor((left + right) / 2);
	if (tree === null) {
		tree = new BST(array[middle]);
	} else {
		tree.insert(array[middle]);
	}
	helper(array, tree, left, middle - 1)
	helper(array, tree, middle + 1, right)
	return tree;
}

class BST {
  constructor(value) {
    this.value = value;
    this.left = null;
    this.right = null;
  }

  insert(value) {
    if (value < this.value) {
      if (this.left === null) {
        this.left = new BST(value);
      } else {
        this.left.insert(value);
      }
    } else {
      if (this.right === null) {
        this.right = new BST(value);
      } else {
        this.right.insert(value);
      }
    }
  }
}
