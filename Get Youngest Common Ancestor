
  Write a function that returns the youngest common ancestor to the two
  descendants.

class AncestralTree {
  constructor(name) {
    this.name = name;
    this.ancestor = null;
  }
}

function getYoungestCommonAncestor(topAncestor, descendantOne, descendantTwo) {
	let depthOne = findDepth(topAncestor, descendantOne);
	let depthTwo = findDepth(topAncestor, descendantTwo);
	if (depthOne > depthTwo) {
		return findAncestor(descendantOne, descendantTwo, depthOne - depthTwo);
	} else {
		return findAncestor(descendantTwo, descendantOne, depthTwo - depthOne);
	}
}

function findAncestor(node1, node2, diff) {
	while (diff > 0) {
		node1 = node1.ancestor;
		diff --;
	}
	while (node1 !== node2) {
		node1 = node1.ancestor;
		node2 = node2.ancestor;
	}
	return node1;
}

function findDepth(root, node) {
	let depth = 0;
	while (root !== node) {
		depth ++;
		node = node.ancestor;
	}
	return depth;
}
